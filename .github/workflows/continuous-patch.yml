name: Continuous Patch 

env:
  CURRENT_VERSION: ${{ vars.LATEST_PATCHED_VERSION }}
  SCRAPED_VERSION: ""
  SHOULD_CONTINUE: false
  YUKIHANA_FIDDLER_NAME: "fiddler.dll"

on:
  # Continous (sheduled) run here
  workflow_dispatch:

jobs:
  scrape-fe-version-and-set-env:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [22.9.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: node .

    - name: Read & Set Env
      run: |
        $fileContent = Get-Content -Path "utils/fe-version-scraper/latest_version.txt" -Raw
        echo "SCRAPED_VERSION=$fileContent" >> $GITHUB_ENV

  compare-versions:
    runs-on: windows-latest

    needs: scrape-fe-version-and-set-env

    steps:
      - name: Compare Versions
        id: version_compare
        uses: frankfarrell/semver-tool@v3.4.0
        with:
          version: ${{ env.CURRENT_VERSION }}
          operator: gt
          compare_with: ${{ env.SCRAPED_VERSION }}
      
      - name: Set if Continue?
        run: echo "SHOULD_CONTINUE=${{ steps.version_compare.outputs.result }}" >> $GITHUB_ENV

  download-patch-utils:
    runs-on: windows-latest

    needs: compare-versions
    if: ${{ env.SHOULD_CONTINUE == 'true' }}
   
    steps:
      - name: Compare SCRAPED_VERSION with 5.17.0
        id: scraped_version_check
        uses: frankfarrell/semver-tool@v3.4.0
        with:
          version: ${{ env.SCRAPED_VERSION }}
          operator: gte
          compare_with: '5.17.0'

      - name: Set Yukihana fiddler name. (>= 5.17.0)
        if: steps.scraped_version_check.outputs.result == 'true'
        run: echo "YUKIHANA_FIDDLER_NAME=fiddler.dll" >> $GITHUB_ENV

      - name: Set Yukihana fiddler name. (< 5.17.0)
        if: steps.scraped_version_check.outputs.result == 'false'
        run: echo "YUKIHANA_FIDDLER_NAME=libfiddler.dll" >> $GITHUB_ENV

      - name: Create yukihana directory
        run: |
          if (-Not (Test-Path "yukihana")) {
            New-Item -ItemType Directory -Path "yukihana"
          }

      - name: Set Yukihana Release (if CURRENT_VERSION >= 5.17.0)
        if: steps.scraped_version_check.outputs.result == 'true'
        run: echo "YUKIHANA_RELEASE=continuous" >> $GITHUB_ENV

      - name: Set Yukihana Release (if CURRENT_VERSION < 5.17.0) 
        if: steps.scraped_version_check.outputs.result == 'false'
        run: echo "YUKIHANA_RELEASE=v1.0.9" >> $GITHUB_ENV
    
      - name: Download Yukihana Patch
        run: |
          echo "Downloading files from ${{ env.YUKIHANA_RELEASE }}"
          Invoke-WebRequest -Uri https://github.com/project-yukihana/Yukihana-patch/releases/download/${{ env.YUKIHANA_RELEASE }}/yukihana-${{ env.YUKIHANA_FIDDLER_NAME }}-win32-x86_64-${{ env.YUKIHANA_RELEASE }}.dll -OutFile yukihana/${{ env.YUKIHANA_FIDDLER_NAME }}.dll
          Invoke-WebRequest -Uri https://github.com/project-yukihana/Yukihana-patch/releases/download/${{ env.YUKIHANA_RELEASE }}/yukihana-hostpolicy-win32-x86_64-${{ env.YUKIHANA_RELEASE }}.dll -OutFile yukihana/hostpolicy.dll

      - name: Download server
        
  # unpack-unrar:
  
  #   runs-on: windows-latest

  #   steps:
  #     - name: Download UnRar
  #       run: |
  #         $url = "https://www.rarlab.com/rar/unrarw64.exe"
  #         Invoke-WebRequest -Uri $url -OutFile unrarw64.exe
  #       shell: pwsh

  #     - name: Extract unrar.exe
  #       run: |
  #         & ".\unrarw64.exe" /s
  #       shell: pwsh

  #     - name: Clean up unrarw64.exe
  #       run: Remove-Item .\unrarw64.exe
  #       shell: pwsh

  #     - name: Verify UnRar Installation
  #       run: |
  #         & ".\unrar.exe" -v
  #       shell: pwsh
        
  #     - name: Upload UnRar as Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: unrar-extracted
  #         path: .\unrar.exe

  
        
